/*
traQ v3

traQ v3 API

API version: 3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package traq

import (
	"encoding/json"
)

// checks if the QallSoundboardItemCreatedEvent type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QallSoundboardItemCreatedEvent{}

// QallSoundboardItemCreatedEvent Qallのサウンドボードアイテムが作成された
type QallSoundboardItemCreatedEvent struct {
	// 作成されたサウンドボードアイテムのId
	SoundId string `json:"soundId"`
	// 作成されたサウンドボードアイテムの名前
	Name string `json:"name"`
	// 作成者のId
	CreatorId string `json:"creatorId"`
}

// NewQallSoundboardItemCreatedEvent instantiates a new QallSoundboardItemCreatedEvent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQallSoundboardItemCreatedEvent(soundId string, name string, creatorId string) *QallSoundboardItemCreatedEvent {
	this := QallSoundboardItemCreatedEvent{}
	this.SoundId = soundId
	this.Name = name
	this.CreatorId = creatorId
	return &this
}

// NewQallSoundboardItemCreatedEventWithDefaults instantiates a new QallSoundboardItemCreatedEvent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQallSoundboardItemCreatedEventWithDefaults() *QallSoundboardItemCreatedEvent {
	this := QallSoundboardItemCreatedEvent{}
	return &this
}

// GetSoundId returns the SoundId field value
func (o *QallSoundboardItemCreatedEvent) GetSoundId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SoundId
}

// GetSoundIdOk returns a tuple with the SoundId field value
// and a boolean to check if the value has been set.
func (o *QallSoundboardItemCreatedEvent) GetSoundIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SoundId, true
}

// SetSoundId sets field value
func (o *QallSoundboardItemCreatedEvent) SetSoundId(v string) {
	o.SoundId = v
}

// GetName returns the Name field value
func (o *QallSoundboardItemCreatedEvent) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *QallSoundboardItemCreatedEvent) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *QallSoundboardItemCreatedEvent) SetName(v string) {
	o.Name = v
}

// GetCreatorId returns the CreatorId field value
func (o *QallSoundboardItemCreatedEvent) GetCreatorId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatorId
}

// GetCreatorIdOk returns a tuple with the CreatorId field value
// and a boolean to check if the value has been set.
func (o *QallSoundboardItemCreatedEvent) GetCreatorIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatorId, true
}

// SetCreatorId sets field value
func (o *QallSoundboardItemCreatedEvent) SetCreatorId(v string) {
	o.CreatorId = v
}

func (o QallSoundboardItemCreatedEvent) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QallSoundboardItemCreatedEvent) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["soundId"] = o.SoundId
	toSerialize["name"] = o.Name
	toSerialize["creatorId"] = o.CreatorId
	return toSerialize, nil
}

type NullableQallSoundboardItemCreatedEvent struct {
	value *QallSoundboardItemCreatedEvent
	isSet bool
}

func (v NullableQallSoundboardItemCreatedEvent) Get() *QallSoundboardItemCreatedEvent {
	return v.value
}

func (v *NullableQallSoundboardItemCreatedEvent) Set(val *QallSoundboardItemCreatedEvent) {
	v.value = val
	v.isSet = true
}

func (v NullableQallSoundboardItemCreatedEvent) IsSet() bool {
	return v.isSet
}

func (v *NullableQallSoundboardItemCreatedEvent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQallSoundboardItemCreatedEvent(val *QallSoundboardItemCreatedEvent) *NullableQallSoundboardItemCreatedEvent {
	return &NullableQallSoundboardItemCreatedEvent{value: val, isSet: true}
}

func (v NullableQallSoundboardItemCreatedEvent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQallSoundboardItemCreatedEvent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
