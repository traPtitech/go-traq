/*
traQ v3

traQ v3 API

API version: 3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package traq

import (
	"encoding/json"
)

// checks if the QallRoomStateChangedEventState type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QallRoomStateChangedEventState{}

// QallRoomStateChangedEventState 変更後のルーム状態
type QallRoomStateChangedEventState struct {
	// ルームのID
	RoomId       *string                                           `json:"roomId,omitempty"`
	Participants []QallRoomStateChangedEventStateParticipantsInner `json:"participants,omitempty"`
	// ウェビナールームかどうか
	IsWebinar *bool `json:"isWebinar,omitempty"`
	// ルームに関連付けられたカスタム属性
	Metadata *string `json:"metadata,omitempty"`
}

// NewQallRoomStateChangedEventState instantiates a new QallRoomStateChangedEventState object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQallRoomStateChangedEventState() *QallRoomStateChangedEventState {
	this := QallRoomStateChangedEventState{}
	return &this
}

// NewQallRoomStateChangedEventStateWithDefaults instantiates a new QallRoomStateChangedEventState object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQallRoomStateChangedEventStateWithDefaults() *QallRoomStateChangedEventState {
	this := QallRoomStateChangedEventState{}
	return &this
}

// GetRoomId returns the RoomId field value if set, zero value otherwise.
func (o *QallRoomStateChangedEventState) GetRoomId() string {
	if o == nil || IsNil(o.RoomId) {
		var ret string
		return ret
	}
	return *o.RoomId
}

// GetRoomIdOk returns a tuple with the RoomId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QallRoomStateChangedEventState) GetRoomIdOk() (*string, bool) {
	if o == nil || IsNil(o.RoomId) {
		return nil, false
	}
	return o.RoomId, true
}

// HasRoomId returns a boolean if a field has been set.
func (o *QallRoomStateChangedEventState) HasRoomId() bool {
	if o != nil && !IsNil(o.RoomId) {
		return true
	}

	return false
}

// SetRoomId gets a reference to the given string and assigns it to the RoomId field.
func (o *QallRoomStateChangedEventState) SetRoomId(v string) {
	o.RoomId = &v
}

// GetParticipants returns the Participants field value if set, zero value otherwise.
func (o *QallRoomStateChangedEventState) GetParticipants() []QallRoomStateChangedEventStateParticipantsInner {
	if o == nil || IsNil(o.Participants) {
		var ret []QallRoomStateChangedEventStateParticipantsInner
		return ret
	}
	return o.Participants
}

// GetParticipantsOk returns a tuple with the Participants field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QallRoomStateChangedEventState) GetParticipantsOk() ([]QallRoomStateChangedEventStateParticipantsInner, bool) {
	if o == nil || IsNil(o.Participants) {
		return nil, false
	}
	return o.Participants, true
}

// HasParticipants returns a boolean if a field has been set.
func (o *QallRoomStateChangedEventState) HasParticipants() bool {
	if o != nil && !IsNil(o.Participants) {
		return true
	}

	return false
}

// SetParticipants gets a reference to the given []QallRoomStateChangedEventStateParticipantsInner and assigns it to the Participants field.
func (o *QallRoomStateChangedEventState) SetParticipants(v []QallRoomStateChangedEventStateParticipantsInner) {
	o.Participants = v
}

// GetIsWebinar returns the IsWebinar field value if set, zero value otherwise.
func (o *QallRoomStateChangedEventState) GetIsWebinar() bool {
	if o == nil || IsNil(o.IsWebinar) {
		var ret bool
		return ret
	}
	return *o.IsWebinar
}

// GetIsWebinarOk returns a tuple with the IsWebinar field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QallRoomStateChangedEventState) GetIsWebinarOk() (*bool, bool) {
	if o == nil || IsNil(o.IsWebinar) {
		return nil, false
	}
	return o.IsWebinar, true
}

// HasIsWebinar returns a boolean if a field has been set.
func (o *QallRoomStateChangedEventState) HasIsWebinar() bool {
	if o != nil && !IsNil(o.IsWebinar) {
		return true
	}

	return false
}

// SetIsWebinar gets a reference to the given bool and assigns it to the IsWebinar field.
func (o *QallRoomStateChangedEventState) SetIsWebinar(v bool) {
	o.IsWebinar = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *QallRoomStateChangedEventState) GetMetadata() string {
	if o == nil || IsNil(o.Metadata) {
		var ret string
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QallRoomStateChangedEventState) GetMetadataOk() (*string, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *QallRoomStateChangedEventState) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given string and assigns it to the Metadata field.
func (o *QallRoomStateChangedEventState) SetMetadata(v string) {
	o.Metadata = &v
}

func (o QallRoomStateChangedEventState) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QallRoomStateChangedEventState) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RoomId) {
		toSerialize["roomId"] = o.RoomId
	}
	if !IsNil(o.Participants) {
		toSerialize["participants"] = o.Participants
	}
	if !IsNil(o.IsWebinar) {
		toSerialize["isWebinar"] = o.IsWebinar
	}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	return toSerialize, nil
}

type NullableQallRoomStateChangedEventState struct {
	value *QallRoomStateChangedEventState
	isSet bool
}

func (v NullableQallRoomStateChangedEventState) Get() *QallRoomStateChangedEventState {
	return v.value
}

func (v *NullableQallRoomStateChangedEventState) Set(val *QallRoomStateChangedEventState) {
	v.value = val
	v.isSet = true
}

func (v NullableQallRoomStateChangedEventState) IsSet() bool {
	return v.isSet
}

func (v *NullableQallRoomStateChangedEventState) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQallRoomStateChangedEventState(val *QallRoomStateChangedEventState) *NullableQallRoomStateChangedEventState {
	return &NullableQallRoomStateChangedEventState{value: val, isSet: true}
}

func (v NullableQallRoomStateChangedEventState) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQallRoomStateChangedEventState) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
