/*
traQ v3

traQ v3 API

API version: 3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package traq

import (
	"encoding/json"
)

// checks if the PutChannelSubscribeLevelRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PutChannelSubscribeLevelRequest{}

// PutChannelSubscribeLevelRequest チャンネル購読レベル変更リクエスト
type PutChannelSubscribeLevelRequest struct {
	Level ChannelSubscribeLevel `json:"level"`
}

// NewPutChannelSubscribeLevelRequest instantiates a new PutChannelSubscribeLevelRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPutChannelSubscribeLevelRequest(level ChannelSubscribeLevel) *PutChannelSubscribeLevelRequest {
	this := PutChannelSubscribeLevelRequest{}
	this.Level = level
	return &this
}

// NewPutChannelSubscribeLevelRequestWithDefaults instantiates a new PutChannelSubscribeLevelRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPutChannelSubscribeLevelRequestWithDefaults() *PutChannelSubscribeLevelRequest {
	this := PutChannelSubscribeLevelRequest{}
	return &this
}

// GetLevel returns the Level field value
func (o *PutChannelSubscribeLevelRequest) GetLevel() ChannelSubscribeLevel {
	if o == nil {
		var ret ChannelSubscribeLevel
		return ret
	}

	return o.Level
}

// GetLevelOk returns a tuple with the Level field value
// and a boolean to check if the value has been set.
func (o *PutChannelSubscribeLevelRequest) GetLevelOk() (*ChannelSubscribeLevel, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Level, true
}

// SetLevel sets field value
func (o *PutChannelSubscribeLevelRequest) SetLevel(v ChannelSubscribeLevel) {
	o.Level = v
}

func (o PutChannelSubscribeLevelRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PutChannelSubscribeLevelRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["level"] = o.Level
	return toSerialize, nil
}

type NullablePutChannelSubscribeLevelRequest struct {
	value *PutChannelSubscribeLevelRequest
	isSet bool
}

func (v NullablePutChannelSubscribeLevelRequest) Get() *PutChannelSubscribeLevelRequest {
	return v.value
}

func (v *NullablePutChannelSubscribeLevelRequest) Set(val *PutChannelSubscribeLevelRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePutChannelSubscribeLevelRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePutChannelSubscribeLevelRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePutChannelSubscribeLevelRequest(val *PutChannelSubscribeLevelRequest) *NullablePutChannelSubscribeLevelRequest {
	return &NullablePutChannelSubscribeLevelRequest{value: val, isSet: true}
}

func (v NullablePutChannelSubscribeLevelRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePutChannelSubscribeLevelRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
