/*
traQ v3

traQ v3 API

API version: 3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package traq

import (
	"encoding/json"
	"time"
)

// checks if the ChannelViewer type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChannelViewer{}

// ChannelViewer チャンネル閲覧者情報
type ChannelViewer struct {
	// ユーザーUUID
	UserId string           `json:"userId"`
	State  ChannelViewState `json:"state"`
	// 更新日時
	UpdatedAt time.Time `json:"updatedAt"`
}

// NewChannelViewer instantiates a new ChannelViewer object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChannelViewer(userId string, state ChannelViewState, updatedAt time.Time) *ChannelViewer {
	this := ChannelViewer{}
	this.UserId = userId
	this.State = state
	this.UpdatedAt = updatedAt
	return &this
}

// NewChannelViewerWithDefaults instantiates a new ChannelViewer object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChannelViewerWithDefaults() *ChannelViewer {
	this := ChannelViewer{}
	return &this
}

// GetUserId returns the UserId field value
func (o *ChannelViewer) GetUserId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value
// and a boolean to check if the value has been set.
func (o *ChannelViewer) GetUserIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserId, true
}

// SetUserId sets field value
func (o *ChannelViewer) SetUserId(v string) {
	o.UserId = v
}

// GetState returns the State field value
func (o *ChannelViewer) GetState() ChannelViewState {
	if o == nil {
		var ret ChannelViewState
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *ChannelViewer) GetStateOk() (*ChannelViewState, bool) {
	if o == nil {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *ChannelViewer) SetState(v ChannelViewState) {
	o.State = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *ChannelViewer) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *ChannelViewer) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *ChannelViewer) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

func (o ChannelViewer) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChannelViewer) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["userId"] = o.UserId
	toSerialize["state"] = o.State
	toSerialize["updatedAt"] = o.UpdatedAt
	return toSerialize, nil
}

type NullableChannelViewer struct {
	value *ChannelViewer
	isSet bool
}

func (v NullableChannelViewer) Get() *ChannelViewer {
	return v.value
}

func (v *NullableChannelViewer) Set(val *ChannelViewer) {
	v.value = val
	v.isSet = true
}

func (v NullableChannelViewer) IsSet() bool {
	return v.isSet
}

func (v *NullableChannelViewer) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChannelViewer(val *ChannelViewer) *NullableChannelViewer {
	return &NullableChannelViewer{value: val, isSet: true}
}

func (v NullableChannelViewer) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChannelViewer) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
