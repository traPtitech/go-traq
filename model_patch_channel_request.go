/*
traQ v3

traQ v3 API

API version: 3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package traq

import (
	"encoding/json"
)

// checks if the PatchChannelRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PatchChannelRequest{}

// PatchChannelRequest チャンネル情報変更リクエスト
type PatchChannelRequest struct {
	// チャンネル名
	Name *string `json:"name,omitempty" validate:"regexp=^[a-zA-Z0-9-_]{1,20}$"`
	// アーカイブされているかどうか
	Archived *bool `json:"archived,omitempty"`
	// 強制通知チャンネルかどうか
	Force *bool `json:"force,omitempty"`
	// 親チャンネルUUID
	Parent *string `json:"parent,omitempty"`
}

// NewPatchChannelRequest instantiates a new PatchChannelRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPatchChannelRequest() *PatchChannelRequest {
	this := PatchChannelRequest{}
	return &this
}

// NewPatchChannelRequestWithDefaults instantiates a new PatchChannelRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPatchChannelRequestWithDefaults() *PatchChannelRequest {
	this := PatchChannelRequest{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PatchChannelRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchChannelRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PatchChannelRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PatchChannelRequest) SetName(v string) {
	o.Name = &v
}

// GetArchived returns the Archived field value if set, zero value otherwise.
func (o *PatchChannelRequest) GetArchived() bool {
	if o == nil || IsNil(o.Archived) {
		var ret bool
		return ret
	}
	return *o.Archived
}

// GetArchivedOk returns a tuple with the Archived field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchChannelRequest) GetArchivedOk() (*bool, bool) {
	if o == nil || IsNil(o.Archived) {
		return nil, false
	}
	return o.Archived, true
}

// HasArchived returns a boolean if a field has been set.
func (o *PatchChannelRequest) HasArchived() bool {
	if o != nil && !IsNil(o.Archived) {
		return true
	}

	return false
}

// SetArchived gets a reference to the given bool and assigns it to the Archived field.
func (o *PatchChannelRequest) SetArchived(v bool) {
	o.Archived = &v
}

// GetForce returns the Force field value if set, zero value otherwise.
func (o *PatchChannelRequest) GetForce() bool {
	if o == nil || IsNil(o.Force) {
		var ret bool
		return ret
	}
	return *o.Force
}

// GetForceOk returns a tuple with the Force field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchChannelRequest) GetForceOk() (*bool, bool) {
	if o == nil || IsNil(o.Force) {
		return nil, false
	}
	return o.Force, true
}

// HasForce returns a boolean if a field has been set.
func (o *PatchChannelRequest) HasForce() bool {
	if o != nil && !IsNil(o.Force) {
		return true
	}

	return false
}

// SetForce gets a reference to the given bool and assigns it to the Force field.
func (o *PatchChannelRequest) SetForce(v bool) {
	o.Force = &v
}

// GetParent returns the Parent field value if set, zero value otherwise.
func (o *PatchChannelRequest) GetParent() string {
	if o == nil || IsNil(o.Parent) {
		var ret string
		return ret
	}
	return *o.Parent
}

// GetParentOk returns a tuple with the Parent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchChannelRequest) GetParentOk() (*string, bool) {
	if o == nil || IsNil(o.Parent) {
		return nil, false
	}
	return o.Parent, true
}

// HasParent returns a boolean if a field has been set.
func (o *PatchChannelRequest) HasParent() bool {
	if o != nil && !IsNil(o.Parent) {
		return true
	}

	return false
}

// SetParent gets a reference to the given string and assigns it to the Parent field.
func (o *PatchChannelRequest) SetParent(v string) {
	o.Parent = &v
}

func (o PatchChannelRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PatchChannelRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Archived) {
		toSerialize["archived"] = o.Archived
	}
	if !IsNil(o.Force) {
		toSerialize["force"] = o.Force
	}
	if !IsNil(o.Parent) {
		toSerialize["parent"] = o.Parent
	}
	return toSerialize, nil
}

type NullablePatchChannelRequest struct {
	value *PatchChannelRequest
	isSet bool
}

func (v NullablePatchChannelRequest) Get() *PatchChannelRequest {
	return v.value
}

func (v *NullablePatchChannelRequest) Set(val *PatchChannelRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePatchChannelRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePatchChannelRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePatchChannelRequest(val *PatchChannelRequest) *NullablePatchChannelRequest {
	return &NullablePatchChannelRequest{value: val, isSet: true}
}

func (v NullablePatchChannelRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePatchChannelRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
