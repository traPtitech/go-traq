/*
traQ v3

traQ v3 API

API version: 3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package traq

import (
	"encoding/json"
)

// MyChannelViewState 自身のチャンネル閲覧状態
type MyChannelViewState struct {
	// WSセッションの識別子
	Key string `json:"key"`
	// チャンネルUUID
	ChannelId string           `json:"channelId"`
	State     ChannelViewState `json:"state"`
}

// NewMyChannelViewState instantiates a new MyChannelViewState object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMyChannelViewState(key string, channelId string, state ChannelViewState) *MyChannelViewState {
	this := MyChannelViewState{}
	this.Key = key
	this.ChannelId = channelId
	this.State = state
	return &this
}

// NewMyChannelViewStateWithDefaults instantiates a new MyChannelViewState object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMyChannelViewStateWithDefaults() *MyChannelViewState {
	this := MyChannelViewState{}
	return &this
}

// GetKey returns the Key field value
func (o *MyChannelViewState) GetKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Key
}

// GetKeyOk returns a tuple with the Key field value
// and a boolean to check if the value has been set.
func (o *MyChannelViewState) GetKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Key, true
}

// SetKey sets field value
func (o *MyChannelViewState) SetKey(v string) {
	o.Key = v
}

// GetChannelId returns the ChannelId field value
func (o *MyChannelViewState) GetChannelId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ChannelId
}

// GetChannelIdOk returns a tuple with the ChannelId field value
// and a boolean to check if the value has been set.
func (o *MyChannelViewState) GetChannelIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ChannelId, true
}

// SetChannelId sets field value
func (o *MyChannelViewState) SetChannelId(v string) {
	o.ChannelId = v
}

// GetState returns the State field value
func (o *MyChannelViewState) GetState() ChannelViewState {
	if o == nil {
		var ret ChannelViewState
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *MyChannelViewState) GetStateOk() (*ChannelViewState, bool) {
	if o == nil {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *MyChannelViewState) SetState(v ChannelViewState) {
	o.State = v
}

func (o MyChannelViewState) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["key"] = o.Key
	}
	if true {
		toSerialize["channelId"] = o.ChannelId
	}
	if true {
		toSerialize["state"] = o.State
	}
	return json.Marshal(toSerialize)
}

type NullableMyChannelViewState struct {
	value *MyChannelViewState
	isSet bool
}

func (v NullableMyChannelViewState) Get() *MyChannelViewState {
	return v.value
}

func (v *NullableMyChannelViewState) Set(val *MyChannelViewState) {
	v.value = val
	v.isSet = true
}

func (v NullableMyChannelViewState) IsSet() bool {
	return v.isSet
}

func (v *NullableMyChannelViewState) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMyChannelViewState(val *MyChannelViewState) *NullableMyChannelViewState {
	return &NullableMyChannelViewState{value: val, isSet: true}
}

func (v NullableMyChannelViewState) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMyChannelViewState) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
