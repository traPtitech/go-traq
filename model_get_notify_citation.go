/*
traQ v3

traQ v3 API

API version: 3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package traq

import (
	"encoding/json"
)

// GetNotifyCitation メッセージ引用通知の設定情報
type GetNotifyCitation struct {
	NotifyCitation bool `json:"notifyCitation"`
}

// NewGetNotifyCitation instantiates a new GetNotifyCitation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetNotifyCitation(notifyCitation bool) *GetNotifyCitation {
	this := GetNotifyCitation{}
	this.NotifyCitation = notifyCitation
	return &this
}

// NewGetNotifyCitationWithDefaults instantiates a new GetNotifyCitation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetNotifyCitationWithDefaults() *GetNotifyCitation {
	this := GetNotifyCitation{}
	return &this
}

// GetNotifyCitation returns the NotifyCitation field value
func (o *GetNotifyCitation) GetNotifyCitation() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.NotifyCitation
}

// GetNotifyCitationOk returns a tuple with the NotifyCitation field value
// and a boolean to check if the value has been set.
func (o *GetNotifyCitation) GetNotifyCitationOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NotifyCitation, true
}

// SetNotifyCitation sets field value
func (o *GetNotifyCitation) SetNotifyCitation(v bool) {
	o.NotifyCitation = v
}

func (o GetNotifyCitation) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["notifyCitation"] = o.NotifyCitation
	}
	return json.Marshal(toSerialize)
}

type NullableGetNotifyCitation struct {
	value *GetNotifyCitation
	isSet bool
}

func (v NullableGetNotifyCitation) Get() *GetNotifyCitation {
	return v.value
}

func (v *NullableGetNotifyCitation) Set(val *GetNotifyCitation) {
	v.value = val
	v.isSet = true
}

func (v NullableGetNotifyCitation) IsSet() bool {
	return v.isSet
}

func (v *NullableGetNotifyCitation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetNotifyCitation(val *GetNotifyCitation) *NullableGetNotifyCitation {
	return &NullableGetNotifyCitation{value: val, isSet: true}
}

func (v NullableGetNotifyCitation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetNotifyCitation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
