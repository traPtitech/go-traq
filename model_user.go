/*
traQ v3

traQ v3 API

API version: 3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package traq

import (
	"encoding/json"
	"time"
)

// checks if the User type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &User{}

// User ユーザー情報
type User struct {
	// ユーザーUUID
	Id string `json:"id"`
	// ユーザー名
	Name string `json:"name"`
	// ユーザー表示名
	DisplayName string `json:"displayName"`
	// アイコンファイルUUID
	IconFileId string `json:"iconFileId"`
	// BOTかどうか
	Bot   bool             `json:"bot"`
	State UserAccountState `json:"state"`
	// 更新日時
	UpdatedAt time.Time `json:"updatedAt"`
}

// NewUser instantiates a new User object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUser(id string, name string, displayName string, iconFileId string, bot bool, state UserAccountState, updatedAt time.Time) *User {
	this := User{}
	this.Id = id
	this.Name = name
	this.DisplayName = displayName
	this.IconFileId = iconFileId
	this.Bot = bot
	this.State = state
	this.UpdatedAt = updatedAt
	return &this
}

// NewUserWithDefaults instantiates a new User object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserWithDefaults() *User {
	this := User{}
	return &this
}

// GetId returns the Id field value
func (o *User) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *User) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *User) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *User) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *User) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *User) SetName(v string) {
	o.Name = v
}

// GetDisplayName returns the DisplayName field value
func (o *User) GetDisplayName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value
// and a boolean to check if the value has been set.
func (o *User) GetDisplayNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DisplayName, true
}

// SetDisplayName sets field value
func (o *User) SetDisplayName(v string) {
	o.DisplayName = v
}

// GetIconFileId returns the IconFileId field value
func (o *User) GetIconFileId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IconFileId
}

// GetIconFileIdOk returns a tuple with the IconFileId field value
// and a boolean to check if the value has been set.
func (o *User) GetIconFileIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IconFileId, true
}

// SetIconFileId sets field value
func (o *User) SetIconFileId(v string) {
	o.IconFileId = v
}

// GetBot returns the Bot field value
func (o *User) GetBot() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Bot
}

// GetBotOk returns a tuple with the Bot field value
// and a boolean to check if the value has been set.
func (o *User) GetBotOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Bot, true
}

// SetBot sets field value
func (o *User) SetBot(v bool) {
	o.Bot = v
}

// GetState returns the State field value
func (o *User) GetState() UserAccountState {
	if o == nil {
		var ret UserAccountState
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *User) GetStateOk() (*UserAccountState, bool) {
	if o == nil {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *User) SetState(v UserAccountState) {
	o.State = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *User) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *User) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *User) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

func (o User) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o User) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	toSerialize["displayName"] = o.DisplayName
	toSerialize["iconFileId"] = o.IconFileId
	toSerialize["bot"] = o.Bot
	toSerialize["state"] = o.State
	toSerialize["updatedAt"] = o.UpdatedAt
	return toSerialize, nil
}

type NullableUser struct {
	value *User
	isSet bool
}

func (v NullableUser) Get() *User {
	return v.value
}

func (v *NullableUser) Set(val *User) {
	v.value = val
	v.isSet = true
}

func (v NullableUser) IsSet() bool {
	return v.isSet
}

func (v *NullableUser) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUser(val *User) *NullableUser {
	return &NullableUser{value: val, isSet: true}
}

func (v NullableUser) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUser) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
