/*
traQ v3

traQ v3 API

API version: 3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package traq

import (
	"encoding/json"
)

// checks if the SoundboardPlayRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SoundboardPlayRequest{}

// SoundboardPlayRequest struct for SoundboardPlayRequest
type SoundboardPlayRequest struct {
	// サウンドID (DB登録済み)
	SoundId string `json:"soundId"`
	// 再生させたいルームのUUID
	RoomName string `json:"roomName"`
}

// NewSoundboardPlayRequest instantiates a new SoundboardPlayRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSoundboardPlayRequest(soundId string, roomName string) *SoundboardPlayRequest {
	this := SoundboardPlayRequest{}
	this.SoundId = soundId
	this.RoomName = roomName
	return &this
}

// NewSoundboardPlayRequestWithDefaults instantiates a new SoundboardPlayRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSoundboardPlayRequestWithDefaults() *SoundboardPlayRequest {
	this := SoundboardPlayRequest{}
	return &this
}

// GetSoundId returns the SoundId field value
func (o *SoundboardPlayRequest) GetSoundId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SoundId
}

// GetSoundIdOk returns a tuple with the SoundId field value
// and a boolean to check if the value has been set.
func (o *SoundboardPlayRequest) GetSoundIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SoundId, true
}

// SetSoundId sets field value
func (o *SoundboardPlayRequest) SetSoundId(v string) {
	o.SoundId = v
}

// GetRoomName returns the RoomName field value
func (o *SoundboardPlayRequest) GetRoomName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RoomName
}

// GetRoomNameOk returns a tuple with the RoomName field value
// and a boolean to check if the value has been set.
func (o *SoundboardPlayRequest) GetRoomNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RoomName, true
}

// SetRoomName sets field value
func (o *SoundboardPlayRequest) SetRoomName(v string) {
	o.RoomName = v
}

func (o SoundboardPlayRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SoundboardPlayRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["soundId"] = o.SoundId
	toSerialize["roomName"] = o.RoomName
	return toSerialize, nil
}

type NullableSoundboardPlayRequest struct {
	value *SoundboardPlayRequest
	isSet bool
}

func (v NullableSoundboardPlayRequest) Get() *SoundboardPlayRequest {
	return v.value
}

func (v *NullableSoundboardPlayRequest) Set(val *SoundboardPlayRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSoundboardPlayRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSoundboardPlayRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSoundboardPlayRequest(val *SoundboardPlayRequest) *NullableSoundboardPlayRequest {
	return &NullableSoundboardPlayRequest{value: val, isSet: true}
}

func (v NullableSoundboardPlayRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSoundboardPlayRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
