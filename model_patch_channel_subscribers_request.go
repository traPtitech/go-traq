/*
traQ v3

traQ v3 API

API version: 3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package traq

import (
	"encoding/json"
)

// PatchChannelSubscribersRequest チャンネル購読者編集リクエスト
type PatchChannelSubscribersRequest struct {
	// 通知をオンにするユーザーのUUID配列
	On []string `json:"on,omitempty"`
	// 通知をオフにするユーザーのUUID配列
	Off []string `json:"off,omitempty"`
}

// NewPatchChannelSubscribersRequest instantiates a new PatchChannelSubscribersRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPatchChannelSubscribersRequest() *PatchChannelSubscribersRequest {
	this := PatchChannelSubscribersRequest{}
	return &this
}

// NewPatchChannelSubscribersRequestWithDefaults instantiates a new PatchChannelSubscribersRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPatchChannelSubscribersRequestWithDefaults() *PatchChannelSubscribersRequest {
	this := PatchChannelSubscribersRequest{}
	return &this
}

// GetOn returns the On field value if set, zero value otherwise.
func (o *PatchChannelSubscribersRequest) GetOn() []string {
	if o == nil || o.On == nil {
		var ret []string
		return ret
	}
	return o.On
}

// GetOnOk returns a tuple with the On field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchChannelSubscribersRequest) GetOnOk() ([]string, bool) {
	if o == nil || o.On == nil {
		return nil, false
	}
	return o.On, true
}

// HasOn returns a boolean if a field has been set.
func (o *PatchChannelSubscribersRequest) HasOn() bool {
	if o != nil && o.On != nil {
		return true
	}

	return false
}

// SetOn gets a reference to the given []string and assigns it to the On field.
func (o *PatchChannelSubscribersRequest) SetOn(v []string) {
	o.On = v
}

// GetOff returns the Off field value if set, zero value otherwise.
func (o *PatchChannelSubscribersRequest) GetOff() []string {
	if o == nil || o.Off == nil {
		var ret []string
		return ret
	}
	return o.Off
}

// GetOffOk returns a tuple with the Off field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchChannelSubscribersRequest) GetOffOk() ([]string, bool) {
	if o == nil || o.Off == nil {
		return nil, false
	}
	return o.Off, true
}

// HasOff returns a boolean if a field has been set.
func (o *PatchChannelSubscribersRequest) HasOff() bool {
	if o != nil && o.Off != nil {
		return true
	}

	return false
}

// SetOff gets a reference to the given []string and assigns it to the Off field.
func (o *PatchChannelSubscribersRequest) SetOff(v []string) {
	o.Off = v
}

func (o PatchChannelSubscribersRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.On != nil {
		toSerialize["on"] = o.On
	}
	if o.Off != nil {
		toSerialize["off"] = o.Off
	}
	return json.Marshal(toSerialize)
}

type NullablePatchChannelSubscribersRequest struct {
	value *PatchChannelSubscribersRequest
	isSet bool
}

func (v NullablePatchChannelSubscribersRequest) Get() *PatchChannelSubscribersRequest {
	return v.value
}

func (v *NullablePatchChannelSubscribersRequest) Set(val *PatchChannelSubscribersRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePatchChannelSubscribersRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePatchChannelSubscribersRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePatchChannelSubscribersRequest(val *PatchChannelSubscribersRequest) *NullablePatchChannelSubscribersRequest {
	return &NullablePatchChannelSubscribersRequest{value: val, isSet: true}
}

func (v NullablePatchChannelSubscribersRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePatchChannelSubscribersRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
