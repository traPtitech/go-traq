/*
traQ v3

traQ v3 API

API version: 3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package traq

import (
	"encoding/json"
)

// checks if the OIDCUserInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OIDCUserInfo{}

// OIDCUserInfo 自分のユーザー詳細情報
type OIDCUserInfo struct {
	// ユーザーUUID
	Sub string `json:"sub"`
	// ユーザー名
	Name string `json:"name"`
	// ユーザー名
	PreferredUsername string `json:"preferred_username"`
	// アイコン画像URL
	Picture string `json:"picture"`
	// 更新日時
	UpdatedAt *int64            `json:"updated_at,omitempty"`
	Traq      *OIDCTraqUserInfo `json:"traq,omitempty"`
}

// NewOIDCUserInfo instantiates a new OIDCUserInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOIDCUserInfo(sub string, name string, preferredUsername string, picture string) *OIDCUserInfo {
	this := OIDCUserInfo{}
	this.Sub = sub
	this.Name = name
	this.PreferredUsername = preferredUsername
	this.Picture = picture
	return &this
}

// NewOIDCUserInfoWithDefaults instantiates a new OIDCUserInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOIDCUserInfoWithDefaults() *OIDCUserInfo {
	this := OIDCUserInfo{}
	return &this
}

// GetSub returns the Sub field value
func (o *OIDCUserInfo) GetSub() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Sub
}

// GetSubOk returns a tuple with the Sub field value
// and a boolean to check if the value has been set.
func (o *OIDCUserInfo) GetSubOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Sub, true
}

// SetSub sets field value
func (o *OIDCUserInfo) SetSub(v string) {
	o.Sub = v
}

// GetName returns the Name field value
func (o *OIDCUserInfo) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *OIDCUserInfo) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *OIDCUserInfo) SetName(v string) {
	o.Name = v
}

// GetPreferredUsername returns the PreferredUsername field value
func (o *OIDCUserInfo) GetPreferredUsername() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PreferredUsername
}

// GetPreferredUsernameOk returns a tuple with the PreferredUsername field value
// and a boolean to check if the value has been set.
func (o *OIDCUserInfo) GetPreferredUsernameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PreferredUsername, true
}

// SetPreferredUsername sets field value
func (o *OIDCUserInfo) SetPreferredUsername(v string) {
	o.PreferredUsername = v
}

// GetPicture returns the Picture field value
func (o *OIDCUserInfo) GetPicture() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Picture
}

// GetPictureOk returns a tuple with the Picture field value
// and a boolean to check if the value has been set.
func (o *OIDCUserInfo) GetPictureOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Picture, true
}

// SetPicture sets field value
func (o *OIDCUserInfo) SetPicture(v string) {
	o.Picture = v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *OIDCUserInfo) GetUpdatedAt() int64 {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret int64
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OIDCUserInfo) GetUpdatedAtOk() (*int64, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *OIDCUserInfo) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given int64 and assigns it to the UpdatedAt field.
func (o *OIDCUserInfo) SetUpdatedAt(v int64) {
	o.UpdatedAt = &v
}

// GetTraq returns the Traq field value if set, zero value otherwise.
func (o *OIDCUserInfo) GetTraq() OIDCTraqUserInfo {
	if o == nil || IsNil(o.Traq) {
		var ret OIDCTraqUserInfo
		return ret
	}
	return *o.Traq
}

// GetTraqOk returns a tuple with the Traq field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OIDCUserInfo) GetTraqOk() (*OIDCTraqUserInfo, bool) {
	if o == nil || IsNil(o.Traq) {
		return nil, false
	}
	return o.Traq, true
}

// HasTraq returns a boolean if a field has been set.
func (o *OIDCUserInfo) HasTraq() bool {
	if o != nil && !IsNil(o.Traq) {
		return true
	}

	return false
}

// SetTraq gets a reference to the given OIDCTraqUserInfo and assigns it to the Traq field.
func (o *OIDCUserInfo) SetTraq(v OIDCTraqUserInfo) {
	o.Traq = &v
}

func (o OIDCUserInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OIDCUserInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["sub"] = o.Sub
	toSerialize["name"] = o.Name
	toSerialize["preferred_username"] = o.PreferredUsername
	toSerialize["picture"] = o.Picture
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !IsNil(o.Traq) {
		toSerialize["traq"] = o.Traq
	}
	return toSerialize, nil
}

type NullableOIDCUserInfo struct {
	value *OIDCUserInfo
	isSet bool
}

func (v NullableOIDCUserInfo) Get() *OIDCUserInfo {
	return v.value
}

func (v *NullableOIDCUserInfo) Set(val *OIDCUserInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableOIDCUserInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableOIDCUserInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOIDCUserInfo(val *OIDCUserInfo) *NullableOIDCUserInfo {
	return &NullableOIDCUserInfo{value: val, isSet: true}
}

func (v NullableOIDCUserInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOIDCUserInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
