/*
traQ v3

traQ v3 API

API version: 3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package traq

import (
	"encoding/json"
	"time"
)

// ChannelEvent チャンネルイベント
type ChannelEvent struct {
	// イベントタイプ
	Type string `json:"type"`
	// イベント日時
	Datetime time.Time `json:"datetime"`
	// イベント内容
	Detail interface {
	} `json:"detail"`
}

// NewChannelEvent instantiates a new ChannelEvent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChannelEvent(type_ string, datetime time.Time, detail interface {
}) *ChannelEvent {
	this := ChannelEvent{}
	this.Type = type_
	this.Datetime = datetime
	this.Detail = detail
	return &this
}

// NewChannelEventWithDefaults instantiates a new ChannelEvent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChannelEventWithDefaults() *ChannelEvent {
	this := ChannelEvent{}
	return &this
}

// GetType returns the Type field value
func (o *ChannelEvent) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *ChannelEvent) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *ChannelEvent) SetType(v string) {
	o.Type = v
}

// GetDatetime returns the Datetime field value
func (o *ChannelEvent) GetDatetime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Datetime
}

// GetDatetimeOk returns a tuple with the Datetime field value
// and a boolean to check if the value has been set.
func (o *ChannelEvent) GetDatetimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Datetime, true
}

// SetDatetime sets field value
func (o *ChannelEvent) SetDatetime(v time.Time) {
	o.Datetime = v
}

// GetDetail returns the Detail field value
// If the value is explicit nil, the zero value for OneOfTopicChangedEventSubscribersChangedEventPinAddedEventPinRemovedEventNameChangedEventParentChangedEventVisibilityChangedEventForcedNotificationChangedEventChildCreatedEvent will be returned
func (o *ChannelEvent) GetDetail() interface {
} {
	if o == nil {
		var ret interface {
		}
		return ret
	}

	return o.Detail
}

// GetDetailOk returns a tuple with the Detail field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ChannelEvent) GetDetailOk() (interface {
}, bool) {
	if o == nil || o.Detail == nil {
		return nil, false
	}
	return &o.Detail, true
}

// SetDetail sets field value
func (o *ChannelEvent) SetDetail(v interface {
}) {
	o.Detail = v
}

func (o ChannelEvent) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["datetime"] = o.Datetime
	}
	if o.Detail != nil {
		toSerialize["detail"] = o.Detail
	}
	return json.Marshal(toSerialize)
}

type NullableChannelEvent struct {
	value *ChannelEvent
	isSet bool
}

func (v NullableChannelEvent) Get() *ChannelEvent {
	return v.value
}

func (v *NullableChannelEvent) Set(val *ChannelEvent) {
	v.value = val
	v.isSet = true
}

func (v NullableChannelEvent) IsSet() bool {
	return v.isSet
}

func (v *NullableChannelEvent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChannelEvent(val *ChannelEvent) *NullableChannelEvent {
	return &NullableChannelEvent{value: val, isSet: true}
}

func (v NullableChannelEvent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChannelEvent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
