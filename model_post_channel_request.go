/*
traQ v3

traQ v3 API

API version: 3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package traq

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the PostChannelRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PostChannelRequest{}

// PostChannelRequest チャンネル作成リクエスト
type PostChannelRequest struct {
	// チャンネル名
	Name string `json:"name" validate:"regexp=^[a-zA-Z0-9-_]{1,20}$"`
	// 親チャンネルのUUID ルートに作成する場合はnullを指定
	Parent NullableString `json:"parent"`
}

type _PostChannelRequest PostChannelRequest

// NewPostChannelRequest instantiates a new PostChannelRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostChannelRequest(name string, parent NullableString) *PostChannelRequest {
	this := PostChannelRequest{}
	this.Name = name
	this.Parent = parent
	return &this
}

// NewPostChannelRequestWithDefaults instantiates a new PostChannelRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostChannelRequestWithDefaults() *PostChannelRequest {
	this := PostChannelRequest{}
	return &this
}

// GetName returns the Name field value
func (o *PostChannelRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *PostChannelRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *PostChannelRequest) SetName(v string) {
	o.Name = v
}

// GetParent returns the Parent field value
// If the value is explicit nil, the zero value for string will be returned
func (o *PostChannelRequest) GetParent() string {
	if o == nil || o.Parent.Get() == nil {
		var ret string
		return ret
	}

	return *o.Parent.Get()
}

// GetParentOk returns a tuple with the Parent field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PostChannelRequest) GetParentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Parent.Get(), o.Parent.IsSet()
}

// SetParent sets field value
func (o *PostChannelRequest) SetParent(v string) {
	o.Parent.Set(&v)
}

func (o PostChannelRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostChannelRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["parent"] = o.Parent.Get()
	return toSerialize, nil
}

func (o *PostChannelRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"parent",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPostChannelRequest := _PostChannelRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPostChannelRequest)

	if err != nil {
		return err
	}

	*o = PostChannelRequest(varPostChannelRequest)

	return err
}

type NullablePostChannelRequest struct {
	value *PostChannelRequest
	isSet bool
}

func (v NullablePostChannelRequest) Get() *PostChannelRequest {
	return v.value
}

func (v *NullablePostChannelRequest) Set(val *PostChannelRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePostChannelRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePostChannelRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostChannelRequest(val *PostChannelRequest) *NullablePostChannelRequest {
	return &NullablePostChannelRequest{value: val, isSet: true}
}

func (v NullablePostChannelRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostChannelRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
