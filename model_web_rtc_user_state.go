/*
traQ v3

traQ v3 API

API version: 3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package traq

import (
	"encoding/json"
)

// WebRTCUserState WebRTC状態
type WebRTCUserState struct {
	// ユーザーUUID
	UserId string `json:"userId"`
	// チャンネルUUID
	ChannelId string `json:"channelId"`
	// セッションの配列
	Sessions []WebRTCUserStateSessions `json:"sessions"`
}

// NewWebRTCUserState instantiates a new WebRTCUserState object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebRTCUserState(userId string, channelId string, sessions []WebRTCUserStateSessions) *WebRTCUserState {
	this := WebRTCUserState{}
	this.UserId = userId
	this.ChannelId = channelId
	this.Sessions = sessions
	return &this
}

// NewWebRTCUserStateWithDefaults instantiates a new WebRTCUserState object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebRTCUserStateWithDefaults() *WebRTCUserState {
	this := WebRTCUserState{}
	return &this
}

// GetUserId returns the UserId field value
func (o *WebRTCUserState) GetUserId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value
// and a boolean to check if the value has been set.
func (o *WebRTCUserState) GetUserIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserId, true
}

// SetUserId sets field value
func (o *WebRTCUserState) SetUserId(v string) {
	o.UserId = v
}

// GetChannelId returns the ChannelId field value
func (o *WebRTCUserState) GetChannelId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ChannelId
}

// GetChannelIdOk returns a tuple with the ChannelId field value
// and a boolean to check if the value has been set.
func (o *WebRTCUserState) GetChannelIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ChannelId, true
}

// SetChannelId sets field value
func (o *WebRTCUserState) SetChannelId(v string) {
	o.ChannelId = v
}

// GetSessions returns the Sessions field value
func (o *WebRTCUserState) GetSessions() []WebRTCUserStateSessions {
	if o == nil {
		var ret []WebRTCUserStateSessions
		return ret
	}

	return o.Sessions
}

// GetSessionsOk returns a tuple with the Sessions field value
// and a boolean to check if the value has been set.
func (o *WebRTCUserState) GetSessionsOk() ([]WebRTCUserStateSessions, bool) {
	if o == nil {
		return nil, false
	}
	return o.Sessions, true
}

// SetSessions sets field value
func (o *WebRTCUserState) SetSessions(v []WebRTCUserStateSessions) {
	o.Sessions = v
}

func (o WebRTCUserState) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["userId"] = o.UserId
	}
	if true {
		toSerialize["channelId"] = o.ChannelId
	}
	if true {
		toSerialize["sessions"] = o.Sessions
	}
	return json.Marshal(toSerialize)
}

type NullableWebRTCUserState struct {
	value *WebRTCUserState
	isSet bool
}

func (v NullableWebRTCUserState) Get() *WebRTCUserState {
	return v.value
}

func (v *NullableWebRTCUserState) Set(val *WebRTCUserState) {
	v.value = val
	v.isSet = true
}

func (v NullableWebRTCUserState) IsSet() bool {
	return v.isSet
}

func (v *NullableWebRTCUserState) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebRTCUserState(val *WebRTCUserState) *NullableWebRTCUserState {
	return &NullableWebRTCUserState{value: val, isSet: true}
}

func (v NullableWebRTCUserState) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebRTCUserState) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
