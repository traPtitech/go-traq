/*
traQ v3

traQ v3 API

API version: 3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package traq

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the Webhook type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Webhook{}

// Webhook Webhook情報
type Webhook struct {
	// WebhookUUID
	Id string `json:"id"`
	// WebhookユーザーUUID
	BotUserId string `json:"botUserId"`
	// Webhookユーザー表示名
	DisplayName string `json:"displayName"`
	// 説明
	Description string `json:"description"`
	// セキュアWebhookかどうか
	Secure bool `json:"secure"`
	// デフォルトの投稿先チャンネルUUID
	ChannelId string `json:"channelId"`
	// オーナーUUID
	OwnerId string `json:"ownerId"`
	// 作成日時
	CreatedAt time.Time `json:"createdAt"`
	// 更新日時
	UpdatedAt time.Time `json:"updatedAt"`
}

type _Webhook Webhook

// NewWebhook instantiates a new Webhook object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebhook(id string, botUserId string, displayName string, description string, secure bool, channelId string, ownerId string, createdAt time.Time, updatedAt time.Time) *Webhook {
	this := Webhook{}
	this.Id = id
	this.BotUserId = botUserId
	this.DisplayName = displayName
	this.Description = description
	this.Secure = secure
	this.ChannelId = channelId
	this.OwnerId = ownerId
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	return &this
}

// NewWebhookWithDefaults instantiates a new Webhook object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebhookWithDefaults() *Webhook {
	this := Webhook{}
	return &this
}

// GetId returns the Id field value
func (o *Webhook) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Webhook) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Webhook) SetId(v string) {
	o.Id = v
}

// GetBotUserId returns the BotUserId field value
func (o *Webhook) GetBotUserId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BotUserId
}

// GetBotUserIdOk returns a tuple with the BotUserId field value
// and a boolean to check if the value has been set.
func (o *Webhook) GetBotUserIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BotUserId, true
}

// SetBotUserId sets field value
func (o *Webhook) SetBotUserId(v string) {
	o.BotUserId = v
}

// GetDisplayName returns the DisplayName field value
func (o *Webhook) GetDisplayName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value
// and a boolean to check if the value has been set.
func (o *Webhook) GetDisplayNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DisplayName, true
}

// SetDisplayName sets field value
func (o *Webhook) SetDisplayName(v string) {
	o.DisplayName = v
}

// GetDescription returns the Description field value
func (o *Webhook) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *Webhook) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *Webhook) SetDescription(v string) {
	o.Description = v
}

// GetSecure returns the Secure field value
func (o *Webhook) GetSecure() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Secure
}

// GetSecureOk returns a tuple with the Secure field value
// and a boolean to check if the value has been set.
func (o *Webhook) GetSecureOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Secure, true
}

// SetSecure sets field value
func (o *Webhook) SetSecure(v bool) {
	o.Secure = v
}

// GetChannelId returns the ChannelId field value
func (o *Webhook) GetChannelId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ChannelId
}

// GetChannelIdOk returns a tuple with the ChannelId field value
// and a boolean to check if the value has been set.
func (o *Webhook) GetChannelIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ChannelId, true
}

// SetChannelId sets field value
func (o *Webhook) SetChannelId(v string) {
	o.ChannelId = v
}

// GetOwnerId returns the OwnerId field value
func (o *Webhook) GetOwnerId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OwnerId
}

// GetOwnerIdOk returns a tuple with the OwnerId field value
// and a boolean to check if the value has been set.
func (o *Webhook) GetOwnerIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OwnerId, true
}

// SetOwnerId sets field value
func (o *Webhook) SetOwnerId(v string) {
	o.OwnerId = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *Webhook) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *Webhook) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *Webhook) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *Webhook) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *Webhook) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *Webhook) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

func (o Webhook) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Webhook) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["botUserId"] = o.BotUserId
	toSerialize["displayName"] = o.DisplayName
	toSerialize["description"] = o.Description
	toSerialize["secure"] = o.Secure
	toSerialize["channelId"] = o.ChannelId
	toSerialize["ownerId"] = o.OwnerId
	toSerialize["createdAt"] = o.CreatedAt
	toSerialize["updatedAt"] = o.UpdatedAt
	return toSerialize, nil
}

func (o *Webhook) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"botUserId",
		"displayName",
		"description",
		"secure",
		"channelId",
		"ownerId",
		"createdAt",
		"updatedAt",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varWebhook := _Webhook{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varWebhook)

	if err != nil {
		return err
	}

	*o = Webhook(varWebhook)

	return err
}

type NullableWebhook struct {
	value *Webhook
	isSet bool
}

func (v NullableWebhook) Get() *Webhook {
	return v.value
}

func (v *NullableWebhook) Set(val *Webhook) {
	v.value = val
	v.isSet = true
}

func (v NullableWebhook) IsSet() bool {
	return v.isSet
}

func (v *NullableWebhook) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebhook(val *Webhook) *NullableWebhook {
	return &NullableWebhook{value: val, isSet: true}
}

func (v NullableWebhook) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebhook) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
