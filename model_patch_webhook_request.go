/*
traQ v3

traQ v3 API

API version: 3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package traq

import (
	"encoding/json"
)

// checks if the PatchWebhookRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PatchWebhookRequest{}

// PatchWebhookRequest Webhook情報変更リクエスト
type PatchWebhookRequest struct {
	// Webhookユーザー表示名
	Name *string `json:"name,omitempty"`
	// 説明
	Description *string `json:"description,omitempty"`
	// デフォルトの投稿先チャンネルUUID
	ChannelId *string `json:"channelId,omitempty"`
	// Webhookシークレット
	Secret *string `json:"secret,omitempty"`
	// 移譲先のユーザーUUID
	OwnerId *string `json:"ownerId,omitempty"`
}

// NewPatchWebhookRequest instantiates a new PatchWebhookRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPatchWebhookRequest() *PatchWebhookRequest {
	this := PatchWebhookRequest{}
	return &this
}

// NewPatchWebhookRequestWithDefaults instantiates a new PatchWebhookRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPatchWebhookRequestWithDefaults() *PatchWebhookRequest {
	this := PatchWebhookRequest{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PatchWebhookRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchWebhookRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PatchWebhookRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PatchWebhookRequest) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *PatchWebhookRequest) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchWebhookRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *PatchWebhookRequest) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *PatchWebhookRequest) SetDescription(v string) {
	o.Description = &v
}

// GetChannelId returns the ChannelId field value if set, zero value otherwise.
func (o *PatchWebhookRequest) GetChannelId() string {
	if o == nil || IsNil(o.ChannelId) {
		var ret string
		return ret
	}
	return *o.ChannelId
}

// GetChannelIdOk returns a tuple with the ChannelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchWebhookRequest) GetChannelIdOk() (*string, bool) {
	if o == nil || IsNil(o.ChannelId) {
		return nil, false
	}
	return o.ChannelId, true
}

// HasChannelId returns a boolean if a field has been set.
func (o *PatchWebhookRequest) HasChannelId() bool {
	if o != nil && !IsNil(o.ChannelId) {
		return true
	}

	return false
}

// SetChannelId gets a reference to the given string and assigns it to the ChannelId field.
func (o *PatchWebhookRequest) SetChannelId(v string) {
	o.ChannelId = &v
}

// GetSecret returns the Secret field value if set, zero value otherwise.
func (o *PatchWebhookRequest) GetSecret() string {
	if o == nil || IsNil(o.Secret) {
		var ret string
		return ret
	}
	return *o.Secret
}

// GetSecretOk returns a tuple with the Secret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchWebhookRequest) GetSecretOk() (*string, bool) {
	if o == nil || IsNil(o.Secret) {
		return nil, false
	}
	return o.Secret, true
}

// HasSecret returns a boolean if a field has been set.
func (o *PatchWebhookRequest) HasSecret() bool {
	if o != nil && !IsNil(o.Secret) {
		return true
	}

	return false
}

// SetSecret gets a reference to the given string and assigns it to the Secret field.
func (o *PatchWebhookRequest) SetSecret(v string) {
	o.Secret = &v
}

// GetOwnerId returns the OwnerId field value if set, zero value otherwise.
func (o *PatchWebhookRequest) GetOwnerId() string {
	if o == nil || IsNil(o.OwnerId) {
		var ret string
		return ret
	}
	return *o.OwnerId
}

// GetOwnerIdOk returns a tuple with the OwnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchWebhookRequest) GetOwnerIdOk() (*string, bool) {
	if o == nil || IsNil(o.OwnerId) {
		return nil, false
	}
	return o.OwnerId, true
}

// HasOwnerId returns a boolean if a field has been set.
func (o *PatchWebhookRequest) HasOwnerId() bool {
	if o != nil && !IsNil(o.OwnerId) {
		return true
	}

	return false
}

// SetOwnerId gets a reference to the given string and assigns it to the OwnerId field.
func (o *PatchWebhookRequest) SetOwnerId(v string) {
	o.OwnerId = &v
}

func (o PatchWebhookRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PatchWebhookRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.ChannelId) {
		toSerialize["channelId"] = o.ChannelId
	}
	if !IsNil(o.Secret) {
		toSerialize["secret"] = o.Secret
	}
	if !IsNil(o.OwnerId) {
		toSerialize["ownerId"] = o.OwnerId
	}
	return toSerialize, nil
}

type NullablePatchWebhookRequest struct {
	value *PatchWebhookRequest
	isSet bool
}

func (v NullablePatchWebhookRequest) Get() *PatchWebhookRequest {
	return v.value
}

func (v *NullablePatchWebhookRequest) Set(val *PatchWebhookRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePatchWebhookRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePatchWebhookRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePatchWebhookRequest(val *PatchWebhookRequest) *NullablePatchWebhookRequest {
	return &NullablePatchWebhookRequest{value: val, isSet: true}
}

func (v NullablePatchWebhookRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePatchWebhookRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
