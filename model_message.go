/*
traQ v3

traQ v3 API

API version: 3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package traq

import (
	"encoding/json"
	"time"
)

// Message メッセージ
type Message struct {
	// メッセージUUID
	Id string `json:"id"`
	// 投稿者UUID
	UserId string `json:"userId"`
	// チャンネルUUID
	ChannelId string `json:"channelId"`
	// メッセージ本文
	Content string `json:"content"`
	// 投稿日時
	CreatedAt time.Time `json:"createdAt"`
	// 編集日時
	UpdatedAt time.Time `json:"updatedAt"`
	// ピン留めされているかどうか
	Pinned bool `json:"pinned"`
	// 押されているスタンプの配列
	Stamps []MessageStamp `json:"stamps"`
	// スレッドUUID
	ThreadId NullableString `json:"threadId"`
}

// NewMessage instantiates a new Message object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMessage(id string, userId string, channelId string, content string, createdAt time.Time, updatedAt time.Time, pinned bool, stamps []MessageStamp, threadId NullableString) *Message {
	this := Message{}
	this.Id = id
	this.UserId = userId
	this.ChannelId = channelId
	this.Content = content
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	this.Pinned = pinned
	this.Stamps = stamps
	this.ThreadId = threadId
	return &this
}

// NewMessageWithDefaults instantiates a new Message object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMessageWithDefaults() *Message {
	this := Message{}
	return &this
}

// GetId returns the Id field value
func (o *Message) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Message) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Message) SetId(v string) {
	o.Id = v
}

// GetUserId returns the UserId field value
func (o *Message) GetUserId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value
// and a boolean to check if the value has been set.
func (o *Message) GetUserIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserId, true
}

// SetUserId sets field value
func (o *Message) SetUserId(v string) {
	o.UserId = v
}

// GetChannelId returns the ChannelId field value
func (o *Message) GetChannelId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ChannelId
}

// GetChannelIdOk returns a tuple with the ChannelId field value
// and a boolean to check if the value has been set.
func (o *Message) GetChannelIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ChannelId, true
}

// SetChannelId sets field value
func (o *Message) SetChannelId(v string) {
	o.ChannelId = v
}

// GetContent returns the Content field value
func (o *Message) GetContent() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Content
}

// GetContentOk returns a tuple with the Content field value
// and a boolean to check if the value has been set.
func (o *Message) GetContentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Content, true
}

// SetContent sets field value
func (o *Message) SetContent(v string) {
	o.Content = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *Message) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *Message) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *Message) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *Message) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *Message) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *Message) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

// GetPinned returns the Pinned field value
func (o *Message) GetPinned() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Pinned
}

// GetPinnedOk returns a tuple with the Pinned field value
// and a boolean to check if the value has been set.
func (o *Message) GetPinnedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Pinned, true
}

// SetPinned sets field value
func (o *Message) SetPinned(v bool) {
	o.Pinned = v
}

// GetStamps returns the Stamps field value
func (o *Message) GetStamps() []MessageStamp {
	if o == nil {
		var ret []MessageStamp
		return ret
	}

	return o.Stamps
}

// GetStampsOk returns a tuple with the Stamps field value
// and a boolean to check if the value has been set.
func (o *Message) GetStampsOk() ([]MessageStamp, bool) {
	if o == nil {
		return nil, false
	}
	return o.Stamps, true
}

// SetStamps sets field value
func (o *Message) SetStamps(v []MessageStamp) {
	o.Stamps = v
}

// GetThreadId returns the ThreadId field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Message) GetThreadId() string {
	if o == nil || o.ThreadId.Get() == nil {
		var ret string
		return ret
	}

	return *o.ThreadId.Get()
}

// GetThreadIdOk returns a tuple with the ThreadId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Message) GetThreadIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ThreadId.Get(), o.ThreadId.IsSet()
}

// SetThreadId sets field value
func (o *Message) SetThreadId(v string) {
	o.ThreadId.Set(&v)
}

func (o Message) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["userId"] = o.UserId
	}
	if true {
		toSerialize["channelId"] = o.ChannelId
	}
	if true {
		toSerialize["content"] = o.Content
	}
	if true {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if true {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	if true {
		toSerialize["pinned"] = o.Pinned
	}
	if true {
		toSerialize["stamps"] = o.Stamps
	}
	if true {
		toSerialize["threadId"] = o.ThreadId.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableMessage struct {
	value *Message
	isSet bool
}

func (v NullableMessage) Get() *Message {
	return v.value
}

func (v *NullableMessage) Set(val *Message) {
	v.value = val
	v.isSet = true
}

func (v NullableMessage) IsSet() bool {
	return v.isSet
}

func (v *NullableMessage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMessage(val *Message) *NullableMessage {
	return &NullableMessage{value: val, isSet: true}
}

func (v NullableMessage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMessage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
