/*
traQ v3

traQ v3 API

API version: 3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package traq

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the QallSoundboardItemDeletedEvent type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QallSoundboardItemDeletedEvent{}

// QallSoundboardItemDeletedEvent Qallのサウンドボードアイテムが削除された
type QallSoundboardItemDeletedEvent struct {
	// 削除されたサウンドボードアイテムのId
	SoundId string `json:"soundId"`
}

type _QallSoundboardItemDeletedEvent QallSoundboardItemDeletedEvent

// NewQallSoundboardItemDeletedEvent instantiates a new QallSoundboardItemDeletedEvent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQallSoundboardItemDeletedEvent(soundId string) *QallSoundboardItemDeletedEvent {
	this := QallSoundboardItemDeletedEvent{}
	this.SoundId = soundId
	return &this
}

// NewQallSoundboardItemDeletedEventWithDefaults instantiates a new QallSoundboardItemDeletedEvent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQallSoundboardItemDeletedEventWithDefaults() *QallSoundboardItemDeletedEvent {
	this := QallSoundboardItemDeletedEvent{}
	return &this
}

// GetSoundId returns the SoundId field value
func (o *QallSoundboardItemDeletedEvent) GetSoundId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SoundId
}

// GetSoundIdOk returns a tuple with the SoundId field value
// and a boolean to check if the value has been set.
func (o *QallSoundboardItemDeletedEvent) GetSoundIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SoundId, true
}

// SetSoundId sets field value
func (o *QallSoundboardItemDeletedEvent) SetSoundId(v string) {
	o.SoundId = v
}

func (o QallSoundboardItemDeletedEvent) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QallSoundboardItemDeletedEvent) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["soundId"] = o.SoundId
	return toSerialize, nil
}

func (o *QallSoundboardItemDeletedEvent) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"soundId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varQallSoundboardItemDeletedEvent := _QallSoundboardItemDeletedEvent{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varQallSoundboardItemDeletedEvent)

	if err != nil {
		return err
	}

	*o = QallSoundboardItemDeletedEvent(varQallSoundboardItemDeletedEvent)

	return err
}

type NullableQallSoundboardItemDeletedEvent struct {
	value *QallSoundboardItemDeletedEvent
	isSet bool
}

func (v NullableQallSoundboardItemDeletedEvent) Get() *QallSoundboardItemDeletedEvent {
	return v.value
}

func (v *NullableQallSoundboardItemDeletedEvent) Set(val *QallSoundboardItemDeletedEvent) {
	v.value = val
	v.isSet = true
}

func (v NullableQallSoundboardItemDeletedEvent) IsSet() bool {
	return v.isSet
}

func (v *NullableQallSoundboardItemDeletedEvent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQallSoundboardItemDeletedEvent(val *QallSoundboardItemDeletedEvent) *NullableQallSoundboardItemDeletedEvent {
	return &NullableQallSoundboardItemDeletedEvent{value: val, isSet: true}
}

func (v NullableQallSoundboardItemDeletedEvent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQallSoundboardItemDeletedEvent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
