/*
traQ v3

traQ v3 API

API version: 3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package traq

import (
	"encoding/json"
)

// PostMessageRequest メッセージ投稿リクエスト
type PostMessageRequest struct {
	// メッセージ本文
	Content string `json:"content"`
	// メンション・チャンネルリンクを自動埋め込みするか
	Embed *bool `json:"embed,omitempty"`
}

// NewPostMessageRequest instantiates a new PostMessageRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostMessageRequest(content string) *PostMessageRequest {
	this := PostMessageRequest{}
	this.Content = content
	var embed bool = false
	this.Embed = &embed
	return &this
}

// NewPostMessageRequestWithDefaults instantiates a new PostMessageRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostMessageRequestWithDefaults() *PostMessageRequest {
	this := PostMessageRequest{}
	var embed bool = false
	this.Embed = &embed
	return &this
}

// GetContent returns the Content field value
func (o *PostMessageRequest) GetContent() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Content
}

// GetContentOk returns a tuple with the Content field value
// and a boolean to check if the value has been set.
func (o *PostMessageRequest) GetContentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Content, true
}

// SetContent sets field value
func (o *PostMessageRequest) SetContent(v string) {
	o.Content = v
}

// GetEmbed returns the Embed field value if set, zero value otherwise.
func (o *PostMessageRequest) GetEmbed() bool {
	if o == nil || o.Embed == nil {
		var ret bool
		return ret
	}
	return *o.Embed
}

// GetEmbedOk returns a tuple with the Embed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostMessageRequest) GetEmbedOk() (*bool, bool) {
	if o == nil || o.Embed == nil {
		return nil, false
	}
	return o.Embed, true
}

// HasEmbed returns a boolean if a field has been set.
func (o *PostMessageRequest) HasEmbed() bool {
	if o != nil && o.Embed != nil {
		return true
	}

	return false
}

// SetEmbed gets a reference to the given bool and assigns it to the Embed field.
func (o *PostMessageRequest) SetEmbed(v bool) {
	o.Embed = &v
}

func (o PostMessageRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["content"] = o.Content
	}
	if o.Embed != nil {
		toSerialize["embed"] = o.Embed
	}
	return json.Marshal(toSerialize)
}

type NullablePostMessageRequest struct {
	value *PostMessageRequest
	isSet bool
}

func (v NullablePostMessageRequest) Get() *PostMessageRequest {
	return v.value
}

func (v *NullablePostMessageRequest) Set(val *PostMessageRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePostMessageRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePostMessageRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostMessageRequest(val *PostMessageRequest) *NullablePostMessageRequest {
	return &NullablePostMessageRequest{value: val, isSet: true}
}

func (v NullablePostMessageRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostMessageRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
