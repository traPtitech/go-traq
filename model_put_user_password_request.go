/*
traQ v3

traQ v3 API

API version: 3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package traq

import (
	"encoding/json"
)

// PutUserPasswordRequest ユーザーパスワード変更リクエスト
type PutUserPasswordRequest struct {
	// 新しいパスワード
	NewPassword string `json:"newPassword"`
}

// NewPutUserPasswordRequest instantiates a new PutUserPasswordRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPutUserPasswordRequest(newPassword string) *PutUserPasswordRequest {
	this := PutUserPasswordRequest{}
	this.NewPassword = newPassword
	return &this
}

// NewPutUserPasswordRequestWithDefaults instantiates a new PutUserPasswordRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPutUserPasswordRequestWithDefaults() *PutUserPasswordRequest {
	this := PutUserPasswordRequest{}
	return &this
}

// GetNewPassword returns the NewPassword field value
func (o *PutUserPasswordRequest) GetNewPassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NewPassword
}

// GetNewPasswordOk returns a tuple with the NewPassword field value
// and a boolean to check if the value has been set.
func (o *PutUserPasswordRequest) GetNewPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NewPassword, true
}

// SetNewPassword sets field value
func (o *PutUserPasswordRequest) SetNewPassword(v string) {
	o.NewPassword = v
}

func (o PutUserPasswordRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["newPassword"] = o.NewPassword
	}
	return json.Marshal(toSerialize)
}

type NullablePutUserPasswordRequest struct {
	value *PutUserPasswordRequest
	isSet bool
}

func (v NullablePutUserPasswordRequest) Get() *PutUserPasswordRequest {
	return v.value
}

func (v *NullablePutUserPasswordRequest) Set(val *PutUserPasswordRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePutUserPasswordRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePutUserPasswordRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePutUserPasswordRequest(val *PutUserPasswordRequest) *NullablePutUserPasswordRequest {
	return &NullablePutUserPasswordRequest{value: val, isSet: true}
}

func (v NullablePutUserPasswordRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePutUserPasswordRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
