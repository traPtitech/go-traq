/*
traQ v3

traQ v3 API

API version: 3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package traq

import (
	"encoding/json"
	"time"
)

// MessagePin ピン情報
type MessagePin struct {
	// ピン留めしたユーザーUUID
	UserId string `json:"userId"`
	// ピン留めされた日時
	PinnedAt time.Time `json:"pinnedAt"`
}

// NewMessagePin instantiates a new MessagePin object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMessagePin(userId string, pinnedAt time.Time) *MessagePin {
	this := MessagePin{}
	this.UserId = userId
	this.PinnedAt = pinnedAt
	return &this
}

// NewMessagePinWithDefaults instantiates a new MessagePin object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMessagePinWithDefaults() *MessagePin {
	this := MessagePin{}
	return &this
}

// GetUserId returns the UserId field value
func (o *MessagePin) GetUserId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value
// and a boolean to check if the value has been set.
func (o *MessagePin) GetUserIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserId, true
}

// SetUserId sets field value
func (o *MessagePin) SetUserId(v string) {
	o.UserId = v
}

// GetPinnedAt returns the PinnedAt field value
func (o *MessagePin) GetPinnedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.PinnedAt
}

// GetPinnedAtOk returns a tuple with the PinnedAt field value
// and a boolean to check if the value has been set.
func (o *MessagePin) GetPinnedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PinnedAt, true
}

// SetPinnedAt sets field value
func (o *MessagePin) SetPinnedAt(v time.Time) {
	o.PinnedAt = v
}

func (o MessagePin) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["userId"] = o.UserId
	}
	if true {
		toSerialize["pinnedAt"] = o.PinnedAt
	}
	return json.Marshal(toSerialize)
}

type NullableMessagePin struct {
	value *MessagePin
	isSet bool
}

func (v NullableMessagePin) Get() *MessagePin {
	return v.value
}

func (v *NullableMessagePin) Set(val *MessagePin) {
	v.value = val
	v.isSet = true
}

func (v NullableMessagePin) IsSet() bool {
	return v.isSet
}

func (v *NullableMessagePin) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMessagePin(val *MessagePin) *NullableMessagePin {
	return &NullableMessagePin{value: val, isSet: true}
}

func (v NullableMessagePin) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMessagePin) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
