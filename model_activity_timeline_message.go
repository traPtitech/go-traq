/*
traQ v3

traQ v3 API

API version: 3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package traq

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the ActivityTimelineMessage type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ActivityTimelineMessage{}

// ActivityTimelineMessage Timelineアクテビティ用メッセージ
type ActivityTimelineMessage struct {
	// メッセージUUID
	Id string `json:"id"`
	// 投稿者UUID
	UserId string `json:"userId"`
	// チャンネルUUID
	ChannelId string `json:"channelId"`
	// メッセージ本文
	Content string `json:"content"`
	// 投稿日時
	CreatedAt time.Time `json:"createdAt"`
	// 編集日時
	UpdatedAt time.Time `json:"updatedAt"`
}

type _ActivityTimelineMessage ActivityTimelineMessage

// NewActivityTimelineMessage instantiates a new ActivityTimelineMessage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewActivityTimelineMessage(id string, userId string, channelId string, content string, createdAt time.Time, updatedAt time.Time) *ActivityTimelineMessage {
	this := ActivityTimelineMessage{}
	this.Id = id
	this.UserId = userId
	this.ChannelId = channelId
	this.Content = content
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	return &this
}

// NewActivityTimelineMessageWithDefaults instantiates a new ActivityTimelineMessage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewActivityTimelineMessageWithDefaults() *ActivityTimelineMessage {
	this := ActivityTimelineMessage{}
	return &this
}

// GetId returns the Id field value
func (o *ActivityTimelineMessage) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ActivityTimelineMessage) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ActivityTimelineMessage) SetId(v string) {
	o.Id = v
}

// GetUserId returns the UserId field value
func (o *ActivityTimelineMessage) GetUserId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value
// and a boolean to check if the value has been set.
func (o *ActivityTimelineMessage) GetUserIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserId, true
}

// SetUserId sets field value
func (o *ActivityTimelineMessage) SetUserId(v string) {
	o.UserId = v
}

// GetChannelId returns the ChannelId field value
func (o *ActivityTimelineMessage) GetChannelId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ChannelId
}

// GetChannelIdOk returns a tuple with the ChannelId field value
// and a boolean to check if the value has been set.
func (o *ActivityTimelineMessage) GetChannelIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ChannelId, true
}

// SetChannelId sets field value
func (o *ActivityTimelineMessage) SetChannelId(v string) {
	o.ChannelId = v
}

// GetContent returns the Content field value
func (o *ActivityTimelineMessage) GetContent() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Content
}

// GetContentOk returns a tuple with the Content field value
// and a boolean to check if the value has been set.
func (o *ActivityTimelineMessage) GetContentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Content, true
}

// SetContent sets field value
func (o *ActivityTimelineMessage) SetContent(v string) {
	o.Content = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *ActivityTimelineMessage) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *ActivityTimelineMessage) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *ActivityTimelineMessage) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *ActivityTimelineMessage) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *ActivityTimelineMessage) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *ActivityTimelineMessage) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

func (o ActivityTimelineMessage) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ActivityTimelineMessage) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["userId"] = o.UserId
	toSerialize["channelId"] = o.ChannelId
	toSerialize["content"] = o.Content
	toSerialize["createdAt"] = o.CreatedAt
	toSerialize["updatedAt"] = o.UpdatedAt
	return toSerialize, nil
}

func (o *ActivityTimelineMessage) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"userId",
		"channelId",
		"content",
		"createdAt",
		"updatedAt",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varActivityTimelineMessage := _ActivityTimelineMessage{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varActivityTimelineMessage)

	if err != nil {
		return err
	}

	*o = ActivityTimelineMessage(varActivityTimelineMessage)

	return err
}

type NullableActivityTimelineMessage struct {
	value *ActivityTimelineMessage
	isSet bool
}

func (v NullableActivityTimelineMessage) Get() *ActivityTimelineMessage {
	return v.value
}

func (v *NullableActivityTimelineMessage) Set(val *ActivityTimelineMessage) {
	v.value = val
	v.isSet = true
}

func (v NullableActivityTimelineMessage) IsSet() bool {
	return v.isSet
}

func (v *NullableActivityTimelineMessage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableActivityTimelineMessage(val *ActivityTimelineMessage) *NullableActivityTimelineMessage {
	return &NullableActivityTimelineMessage{value: val, isSet: true}
}

func (v NullableActivityTimelineMessage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableActivityTimelineMessage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
