/*
traQ v3

traQ v3 API

API version: 3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package traq

import (
	"encoding/json"
)

// checks if the UserSubscribeState type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserSubscribeState{}

// UserSubscribeState ユーザーのチャンネル購読状態
type UserSubscribeState struct {
	// チャンネルUUID
	ChannelId string                `json:"channelId"`
	Level     ChannelSubscribeLevel `json:"level"`
}

// NewUserSubscribeState instantiates a new UserSubscribeState object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserSubscribeState(channelId string, level ChannelSubscribeLevel) *UserSubscribeState {
	this := UserSubscribeState{}
	this.ChannelId = channelId
	this.Level = level
	return &this
}

// NewUserSubscribeStateWithDefaults instantiates a new UserSubscribeState object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserSubscribeStateWithDefaults() *UserSubscribeState {
	this := UserSubscribeState{}
	return &this
}

// GetChannelId returns the ChannelId field value
func (o *UserSubscribeState) GetChannelId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ChannelId
}

// GetChannelIdOk returns a tuple with the ChannelId field value
// and a boolean to check if the value has been set.
func (o *UserSubscribeState) GetChannelIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ChannelId, true
}

// SetChannelId sets field value
func (o *UserSubscribeState) SetChannelId(v string) {
	o.ChannelId = v
}

// GetLevel returns the Level field value
func (o *UserSubscribeState) GetLevel() ChannelSubscribeLevel {
	if o == nil {
		var ret ChannelSubscribeLevel
		return ret
	}

	return o.Level
}

// GetLevelOk returns a tuple with the Level field value
// and a boolean to check if the value has been set.
func (o *UserSubscribeState) GetLevelOk() (*ChannelSubscribeLevel, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Level, true
}

// SetLevel sets field value
func (o *UserSubscribeState) SetLevel(v ChannelSubscribeLevel) {
	o.Level = v
}

func (o UserSubscribeState) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserSubscribeState) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["channelId"] = o.ChannelId
	toSerialize["level"] = o.Level
	return toSerialize, nil
}

type NullableUserSubscribeState struct {
	value *UserSubscribeState
	isSet bool
}

func (v NullableUserSubscribeState) Get() *UserSubscribeState {
	return v.value
}

func (v *NullableUserSubscribeState) Set(val *UserSubscribeState) {
	v.value = val
	v.isSet = true
}

func (v NullableUserSubscribeState) IsSet() bool {
	return v.isSet
}

func (v *NullableUserSubscribeState) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserSubscribeState(val *UserSubscribeState) *NullableUserSubscribeState {
	return &NullableUserSubscribeState{value: val, isSet: true}
}

func (v NullableUserSubscribeState) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserSubscribeState) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
