/*
traQ v3

traQ v3 API

API version: 3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package traq

import (
	"encoding/json"
)

// PostWebRTCAuthenticateRequest skyway用認証リクエスト
type PostWebRTCAuthenticateRequest struct {
	// ピアID
	PeerId string `json:"peerId"`
}

// NewPostWebRTCAuthenticateRequest instantiates a new PostWebRTCAuthenticateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostWebRTCAuthenticateRequest(peerId string) *PostWebRTCAuthenticateRequest {
	this := PostWebRTCAuthenticateRequest{}
	this.PeerId = peerId
	return &this
}

// NewPostWebRTCAuthenticateRequestWithDefaults instantiates a new PostWebRTCAuthenticateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostWebRTCAuthenticateRequestWithDefaults() *PostWebRTCAuthenticateRequest {
	this := PostWebRTCAuthenticateRequest{}
	return &this
}

// GetPeerId returns the PeerId field value
func (o *PostWebRTCAuthenticateRequest) GetPeerId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PeerId
}

// GetPeerIdOk returns a tuple with the PeerId field value
// and a boolean to check if the value has been set.
func (o *PostWebRTCAuthenticateRequest) GetPeerIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PeerId, true
}

// SetPeerId sets field value
func (o *PostWebRTCAuthenticateRequest) SetPeerId(v string) {
	o.PeerId = v
}

func (o PostWebRTCAuthenticateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["peerId"] = o.PeerId
	}
	return json.Marshal(toSerialize)
}

type NullablePostWebRTCAuthenticateRequest struct {
	value *PostWebRTCAuthenticateRequest
	isSet bool
}

func (v NullablePostWebRTCAuthenticateRequest) Get() *PostWebRTCAuthenticateRequest {
	return v.value
}

func (v *NullablePostWebRTCAuthenticateRequest) Set(val *PostWebRTCAuthenticateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePostWebRTCAuthenticateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePostWebRTCAuthenticateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostWebRTCAuthenticateRequest(val *PostWebRTCAuthenticateRequest) *NullablePostWebRTCAuthenticateRequest {
	return &NullablePostWebRTCAuthenticateRequest{value: val, isSet: true}
}

func (v NullablePostWebRTCAuthenticateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostWebRTCAuthenticateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
